name: "Analyze_"
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - README.md
      #- .github/workflows/**
  pull_request:
env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  Analyze_:
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Analyze
      run: |
        set -e
        git clone https://github.com/tonasodji/test.git .clone
        gh_ref=$(echo $GITHUB_REF_NAME | sed 's,/,_,')
        # Prepare for build
        .clone/prepare.sh
        # Analyze the project
        .clone/analyze.sh MC3
        # Make the directory for ECLAIR project database
        mkdir -p ~/github/$GITHUB_REPOSITORY/$GITHUB_RUN_NUMBER
        rm -f ~/github/$GITHUB_REPOSITORY/last_$gh_ref
        ln -s ~/github/$GITHUB_REPOSITORY/$GITHUB_RUN_NUMBER ~/github/$GITHUB_REPOSITORY/last_$gh_ref
        # Copy the project database
        scp out/PROJECT.ecd ~/github/$GITHUB_REPOSITORY/$GITHUB_RUN_NUMBER
        # Publish ECLAIR report link
        echo "https://eclairit.com:3787/fs/home/emelin/github/$GITHUB_REPOSITORY/$GITHUB_RUN_NUMBER/PROJECT.ecd"
        anybadge --label=ECLAIR --value=default --file=badge.svg
        cp gh-quality-report.sarif out/
        cp badge.svg out/
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: ECLAIR/out

    - name: reports SARIF
      run: |
        (gzip -c ECLAIR/gh-quality-report.sarif | base64 -w0) > results
        gh api --method POST -H "Accept: application/vnd.github+json" \
        /repos/$GITHUB_REPOSITORY/code-scanning/sarifs \
        -f commit_sha=$GITHUB_SHA -f ref=$GITHUB_REF -F sarif=@results
